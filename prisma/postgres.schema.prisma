generator client {
  provider = "prisma-client-js"
  output   = "./generated/postgres-client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

model primeUser {
  id       String @id @default(uuid()) @map("id")
  email    String @unique
  password String
}


model Patient {
  id                 String   @id 
  fullName           String
  email              String   @unique
  dateOfBirth        String
  BirthDay           DateTime
  contactInformation String
  age                Int
  gender             String
  height             Float
  weight             Float
  visits             Visit[]      // One-to-Many with Visit
  clinic             Clinic?      // One-to-One with Clinic
  fhirId             String?
  abhaId             String?
    server_createdAt DateTime        @default(now())
  server_updatedAt DateTime        @default(now()) @updatedAt
  server_deletedAt DateTime?

  @@index([server_updatedAt])
  @@index([server_deletedAt])
}

model Visit {
  id               String  @id
  patient_id       String
  visitDate        String
  visitNotes       String?
  visitType        String
  encounterfhirid  String?
  patient          Patient @relation(fields: [patient_id], references: [id]) // One-to-Many with Patient
    server_createdAt DateTime        @default(now())
  server_updatedAt DateTime        @default(now()) @updatedAt
  server_deletedAt DateTime?

  @@index([server_updatedAt])
  @@index([server_deletedAt])
}

model Interval {
  id             String   @id
  visit_id       String
  intervalType   String
  interval_tag   Int
  configuration  String
  frequencies    String
  dataPoints     String
   server_createdAt DateTime        @default(now())
  server_updatedAt DateTime        @default(now()) @updatedAt
  server_deletedAt DateTime?

  @@index([server_updatedAt])
  @@index([server_deletedAt])
}

model Clinic {
  id                   String  @id @unique
  patient_id           String? @unique // Ensures One-to-One relation
  bloodGroup           String
  antigenStatus        String
  systolic             Int
  diastolic            Int
  temperature          Float
  smokingType          String
  overAllYearOfSmoking Int
  dailyConsumption     Int
  smokingIndex         Int
  alcoholFreeDays      Int
  alcoholType          String
  alcoholConsumption   Int
  homoglobin           Int
  recentHealthIssue    String
  hereditaryHistory    String
  patient              Patient? @relation(fields: [patient_id], references: [id]) // One-to-One with Patient
  observationfhirid    String?
    server_createdAt DateTime        @default(now())
  server_updatedAt DateTime        @default(now()) @updatedAt
  server_deletedAt DateTime?

  @@index([server_updatedAt])
  @@index([server_deletedAt])
}
